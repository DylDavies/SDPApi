name: Deploy Express API to DigitalOcean

# This workflow triggers when a new release is published
# on:
#   release:
#     types: [published]
on:
    push

jobs:
  deploy:
    runs-on: ubuntu-latest # The type of machine to run the job on

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'

      - name: Install dependencies
        run: npm ci

      # Step to create the .env file from GitHub Secrets
      - name: Create .env file
        run: |
          echo "DB_CONN_STRING=${{ secrets.DB_CONN_STRING }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the app directory
            cd /var/www/api

            # Stop the current process to avoid conflicts
            pm2 stop api || true

            # Pull the latest code from the release tag
            git checkout main
            git pull origin main
            git fetch --tags
            latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
            git checkout $latest_tag

            # Install production dependencies
            npm install --omit=dev

            npm run build

            # Start or restart the application with PM2
            pm2 startOrRestart ecosystem.config.js --env production